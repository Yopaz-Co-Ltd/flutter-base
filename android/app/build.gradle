plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

project.ext.envConfigFiles = [
    developdebug  : ".env.develop",
    developrelease: ".env.develop",
    stagingdebug  : ".env.staging",
    stagingrelease: ".env.staging",
    productdebug  : ".env.product",
    productrelease: ".env.product",
]

apply from: project(':flutter_config').projectDir.getPath() + "/dotenv.gradle"

android {
    namespace "com.example.project_base"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId project.env.get("ANDROID_APP_ID")
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdkVersion 33
        versionCode project.env.get("ANDROID_APP_VERSION_CODE").toInteger()
        versionName project.env.get("ANDROID_APP_VERSION_NAME")
        resValue "string", "build_config_package", namespace
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "environment"
    productFlavors {
        develop
        staging
        product
    }
}

flutter {
    source '../..'
}

dependencies {}
